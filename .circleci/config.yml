# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.10
      - image: circleci/dynamodb

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Installing Dependencies
          command: |
            npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Install Serverless CLI
          command: |
            sudo npm i -g serverless

      # run tests!
      - run: npm run test

  deploy:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/repo
    steps:
      - checkout
      - type: add-ssh-keys
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Install Serverless CLI
          command: |
            sudo npm i -g serverless
      - type: deploy
        name: 'Deploy via Serverless'
        command: |
          serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY --profile serverless

          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            serverless deploy --stage prod --conceal
          fi

          if [ "${CIRCLE_BRANCH}" == "staging" ]; then
            serverless deploy --stage staging --conceal
          fi

          if [ "${CIRCLE_BRANCH}" == "develop" ]; then
            serverless deploy --stage dev --conceal
          fi

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - staging
                - develop
